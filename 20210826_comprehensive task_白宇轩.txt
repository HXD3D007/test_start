/**********************************************************************
文件功能：1. 开机以后，LED0 和 LED1 实现 0.5 秒间隔闪烁 2 次，蜂鸣器同
时鸣叫 2 次。
2. 之后，串口等待接收到一个字符'R'，开始进入主循环体。 
3. 主循环体中，LED0 和 LED1 实现 1 秒间隔闪烁。 
4. 串口接收到字符'D'，回复 LED 当前状态和系统当前处于运行还是暂停状态，如
果运行状态，收到字符'R'，如果暂停状态，收到字符'P'。 
5. 串口接收到字符'T'，回复主循环体开始运行的时间和系统当前处于运行还是暂
停状态，时间单位为秒，最大计数值 65535，以每一位的 ASCII 码字符发送，最后
加换行符。 
6. 串口接收到其他字符，回复字符'W'，且蜂鸣器高频率鸣叫 2 次。 
7. 主循环体运行每分钟，蜂鸣器低频率鸣叫 1 次。 
8. 开启 INT0 中断，按下 S_INT0，可以暂停目前的程序运行，再次按下，可以继续
运行，之前的所有都保持继续运行的状态，计数值也继续累加。暂停状态下， 依然
可以响应串口的'D'和'T'的应答回复，具体暂停还是运行状态的解释，详见第4条要求。
9. 所有定时， 用T0 方式 1 中断实现。 10. 串行口配置为方式 1，4800 波特率，
中断接收，查询发送。
项目名称：暑期培训综合任务
编译环境：Keil uVision4
版本：V1.0
说明：无
作者：白宇轩
修改记录：2021.8.27
创建日期：2021.8.22
**********************************************************************/
#include <reg52.h>

sbit LED0 = P2 ^ 0;
sbit LED1 = P2 ^ 1;
sbit BEEP = P0 ^ 0;
sbit KEY0 = P3 ^ 2;

void sys_init();
void light_twinkle ();
void config_uart(unsigned int baud);
void delay(unsigned int x);
void char_send(unsigned char chr);
void str_send(unsigned char *str);
void send_time();
void beep_uart();
void beep_2();
void beep_1();
void time_count();

unsigned int cnt0, cnt1, flag_beep0, cnt_beep0, flag_beep1, cnt_beep1;
unsigned char sit0 ;
unsigned int time_cnt, second_cnt;

void main()
{
    sys_init();                          //设置初值
    light_twinkle ();                    //闪灯2下子函数
    config_uart(9600);                   //串行口初始化，设置9600波特率

    time_cnt = 0;                        
    cnt_beep1 = 0;
    second_cnt = 0;                      //预置变量值

    while(1)
    {
        TH0 = 0xB8;                      //重置定时器初值
        TL0 = 0x00;
        TR0 = 1;
    
        cnt0 = 0;

        while(sit0 == 1)                 //主循环
        {
            LED0 = 0;
            LED1 = 1;                    //初始化LED灯
            while(1)
            {
                if (cnt0 >= 50) 
                {
                    cnt0 = 0; 
                    LED0 = ~LED0; 
				            LED1 = ~LED1;
                    
		            }                        //end of if (cnt0 >= 50)...闪灯  
            }                            //end of while(1)
        }                                //end of while(sit0 == 1)...主循环结束
    }
}

/*********************************************************************
函数名称：sys_init()
函数功能：定时器T0初始化，预置初值
入口参数：无
返回值：无
其他：无
**********************************************************************/
void sys_init()
{
    EA = 1;                              //打开总中断
    TMOD = 0x01;                         //设置定时器T0方式1，T1空闲
    TH0 = 0xB8; 
    TL0 = 0x00;                          //设置定时器初值
    IT0 = 1;                             //下降沿触发外部中断0
    EX0 = 1;                             //打开外部中断0
    TR0 = 1;                             //打开定时器T0
}

/*********************************************************************
函数名称：light_twinkle ()
函数功能：小灯闪烁两次，蜂鸣器间歇鸣叫
入口参数：无
返回值：无
其他：运行结束后计时变量归零
**********************************************************************/
void light_twinkle ()
{
    LED0 = 0;
    LED1 = 0;
    BEEP = 0;
    while(cnt1<3)
    { 
        ET0 = 1;                         //打开定时器T0中断
        if(cnt0 >= 25)
        {       
            LED0 = ~LED0;
            LED1 = ~LED1;                //LED闪烁
            BEEP = ~BEEP;                //蜂鸣器取反
            cnt0 = 0;                    //溢出周期计数归零
            cnt1++;                      //总数值加一
        }                                //end of if(cnt0 >= 25)
    }                                    //end of while(cnt1<3)...闪灯两次
}

/*********************************************************************
函数名称：config_uart(unsigned int baud)
函数功能：初始化串行口，设置中断及波特率
入口参数：baud
返回值：波特率baud
其他：无
**********************************************************************/
void config_uart(unsigned int baud)
{
    SCON = 0x50;                         //SM0=0;SM1=1;REN=1;
    PCON = 0x00;                         //波特率不加倍
    TMOD |= 0x20;                        //定时器初值
    TH1 = 256 - (11059200/12/32)/baud; 
    TL1 = TH1; 
    ET1 = 0;                             //禁止中断 
    ES = 1;                              //使能串口中断
    TR1 = 1;                             //打开定时器1
}

/*********************************************************************
函数名称：delay(unsigned int x)
函数功能：1ms延时函数
入口参数：xms
返回值：xms
其他：无
**********************************************************************/
void delay(unsigned int x)
{
    unsigned char i;

    while(x--)
    {
        for(i=0;i<=125;i++)
        {
            ;
        }
    }                                    //end of while(x--)
}


/*********************************************************************
函数名称：char_send(unsigned char chr)
函数功能：串口发送一个字符
入口参数：字符chr
返回值：chr
其他：无
**********************************************************************/
void char_send(unsigned char chr)
{
    unsigned char *point;
    TI = 0;                              //清零数据发送状态
    *point = chr;                        //增加指针变量    
    SBUF = *point;                       //将字符定义至缓存区
    while(!TI);                          //等待数据传送
    TI = 0;
}

/*********************************************************************
函数名称：str_send(unsigned char *str)
函数功能：串口发送一个字符串
入口参数：字符串指针*str
返回值：*str
其他：无
**********************************************************************/
void str_send(unsigned char *str)
{
    while(*str != '\0')
    {
        char_send(*str);                 //单字符发送
        str++;
    }
}

/*********************************************************************
函数名称：beep_uart()
函数功能：串行口接收信号蜂鸣器
入口参数：无
返回值：无
其他：无
**********************************************************************/
void beep_uart()
{
    BEEP = 0;

    flag_beep0 = 1;
    cnt_beep0 = 0;                       //设置标志位
}

/*********************************************************************
函数名称：beep_1()
函数功能：蜂鸣器鸣叫一声
入口参数：无
返回值：无
其他：无
**********************************************************************/
void beep_1()
{
    if(flag_beep1 == 1)
    {
        cnt_beep1++;
    }
    if(cnt_beep1 >= 50)                   //1s间隔
    {
        BEEP = 1;
        cnt_beep1 = 0;
        flag_beep1 = 0;
    }
}

/*********************************************************************
函数名称：beep_2()
函数功能：蜂鸣器鸣叫两声
入口参数：无
返回值：无
其他：无
**********************************************************************/
void beep_2()
{
    if(flag_beep0 == 1)                   //查询标志位
    {
        cnt_beep0++;
    }
    if(cnt_beep0 == 10)
    {
        BEEP = 1;
    }
    if(cnt_beep0 == 20)
    {
        BEEP = 0;
    }
    if(cnt_beep0 == 30)
    {
        BEEP = 1;
        cnt_beep0 = 0;
        flag_beep0 = 0;
    }                                     //在0.2秒、0.4秒、0.6秒处分别启停
}

/*********************************************************************
函数名称：time_count()
函数功能：计时函数
入口参数：无
返回值：无
其他：无
**********************************************************************/
void time_count()
{
    time_cnt++;                                   //0.02毫秒T0周期计时
    if(time_cnt >= 50)                            //查询1秒计时
    {
        second_cnt++;                             //秒值+1
        time_cnt = 0;
    }
    if((second_cnt%60 == 0)&&(second_cnt > 0))    //查询整分钟
    {
        flag_beep1 = 1;
        BEEP = 0;
        beep_1();                                 //蜂鸣器鸣叫一声
    }
}

/*********************************************************************
函数名称：send_time()
函数功能：按每一位的ASCII码计时发送时间
入口参数：无
返回值：无
其他：将字符转化为对应ASCII码
**********************************************************************/
void send_time()
{
    char_send(second_cnt%100000/10000+48);
    char_send(second_cnt%10000/1000+48);
    char_send(second_cnt%1000/100+48);
    char_send(second_cnt%100/10+48);
    char_send(second_cnt%10+48);
}



void interrupttimer0() interrupt 1 //T0中断子函数
{
    TH0 = 0xB8 ;                   //重置初值
    TL0 = 0x00;
    cnt0++;
    beep_2();
    time_count();
    
}

void interrupt_uart() interrupt 4  //串行口中断函数，串口接收与发送
{
    unsigned char ch;

    if(RI)
    {
        RI = 0;                    //清空接收标志位
        ch = SBUF;
    }
    if(ch == 'R')
    {
        sit0 = 1;
    }
    if(ch == 'D')
    {
        if(TR0 == 1)
        {
            char_send('R');
        }
        if(TR0 == 0)
        {
            char_send('P');
        }
    }                               //end of if(ch == 'D')
    if(ch == 'T')
    {
        send_time();
        if(TR0 == 1)
        {
            str_send("R\r\n");
        }
        if(TR0 == 0)
        {
            str_send("P\r\n");
        }
    }                               //end of if(ch == 'T')
    if((ch != 'R')&&(ch !='D')&&(ch != 'T'))
    {
         char_send('W');
         beep_uart();
    }
}

void interruptkey0() interrupt 0 //INT0中断函数，开关暂停与复位
{
    if(KEY0 == 0)
    {
        delay(10);                  //延时消抖
        if(KEY0 == 0)
        {
            delay(10);
            sit0 =!sit0;            //主循环标志位取反
            if(sit0 == 0)
            {
                TR0 = 1;
            }
            if(sit0 == 1)
            {
                TR0 = 0;
            }
        }                            //end of if(KEY0 == 0)
    }                                //end of if(KEY0 == 0)
}